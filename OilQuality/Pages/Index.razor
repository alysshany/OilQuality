@page "/"
@using OilQuality.Data;
@inject ISnackbar Snackbar
@inject CurrentUser currentUser;
@inject NavigationManager navigation;

<PageTitle>Авторизация</PageTitle>


<div>
    <div class="mainblock">
        <div style="flex: 50%;">
            <img src='/css/Mesh-20.png' style="width: 99%; object-fit: fill">
        </div>
        <div style="flex: 50%; padding: 3%; align-self: center">
            <div style="text-align: center">
                <MudText Style=" font-family: 'Mongolian Baiti'; font-size: 24px;">
                    АВТОРИЗАЦИЯ
                </MudText>
            </div>
            <br />
            <br />
            <MudText Style=" font-family: 'Mongolian Baiti'; margin: 0">
                Логин
            </MudText>
            <MudTextField T="String" Variant="Variant.Text" Style="font-size: 16px; margin: 0" @bind-Value="@login" />
            <br />
            <MudText Style=" font-family: 'Mongolian Baiti'; margin: 0">
                Пароль
            </MudText>
            <MudTextField T="String" Variant="Variant.Text" Style="font-size: 16px; margin: 0" @bind-Value="@password" />
            <br />
            <br />
            <br />
            <MudButton Variant="Variant.Outlined" Color="Color.Info" Style="width: 40%; font-size: 16px" Class="d-flex mx-auto" OnClick="Login">Войти</MudButton>
                
        </div>
    </div>
</div>

@code{
    string? login;
    string? password;

    public void Login()
    {
        if (login != null && password != null)
        {
            var user = DBConnection.FindUserByLogin(login);

            if (user != null && user.Password == password)
            {
                currentUser.CurrentUserData = user;

                Snackbar.Add("Успешно", Severity.Success);

                switch (currentUser.CurrentUserData.RoleName)
                {
                    case "Администратор":
                        navigation.NavigateTo("/admin");
                        break;
                    case "Лаборант":
                        navigation.NavigateTo("/worker");
                        break;
                    case "Заведующий":
                        navigation.NavigateTo("/manager");
                        break;
                }
            }
            else
            {
                Snackbar.Add("Пользователя с такими данными не существует.", Severity.Error);
            }
        }
        else
        {
            Snackbar.Add("Заполните все поля.", Severity.Error);
        }
    }
}

<style>

    .labelStyle {
        letter-spacing: 0;
        text-transform: none;
        text-align: left;
        vertical-align: middle;
        /*
        font-size: 28px;*/
        color: black;
        font-weight: 400;
        width: 100%
    }

    .inputStyle {
        box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.5);
        /*font-size: 22px;*/
        width: 80%;
        font-family: Playfair Display;
        mix-blend-mode: normal;
        align-items: inherit;
    }
    .mainblock{
        display: flex;
        box-shadow: rgb(38, 57, 77) 0px 20px 30px -10px;
        position: absolute;
        left: 20%;
        top: 700%;
        align-self: center;
        width: 60%;
        opacity: 1;
        mix-blend-mode: normal;
        background-color: rgba(255, 255, 255, 1);
        align-items: center;
        justify-content: center;
    }
</style>