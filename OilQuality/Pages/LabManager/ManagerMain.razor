@page "/manager"
@using OilQuality.Data;

<MudAppBar Style="margin-top: 2%; position: absolute; width: 90%; left: 50%; transform: translate(-50%, 0); background-color: white; box-shadow: rgb(38, 57, 77) 0px 20px 30px -10px;">
    <div Class="d-flex mx-auto">
        <MudButton Href="/manager">
            Главная страница
        </MudButton>
        <MudButton Href="/requestListManager">
            Заявки
        </MudButton>
        <MudButton Href="/allAnalyzeList">
            Выполненные анализы
        </MudButton>
        <MudButton Href="/managerEquipList">
            Оборудование
        </MudButton>
    </div>
    <MudIconButton Icon="@Icons.Material.Outlined.ExitToApp" aria-label="exit" Href="/"></MudIconButton>
</MudAppBar>

<div class="mainblock">
    <div style="width: 49%; height: 49%; box-shadow: rgb(38, 57, 77) 0px 5px 10px -0px;">
        <img src='/css//Mesh-20.png' style="width: 100%; height:100%; object-fit: cover; overflow: hidden">
    </div>
    <div style="background-color: white; width: 49%; height: 49%; box-shadow: rgb(38, 57, 77) 0px 5px 10px -0px; align-items: center">

        <MudChart ChartType="ChartType.Donut" LegendPosition="Position.Right" Width="260px" Height="260px"
                  InputData="@data" InputLabels="@labels">
        </MudChart>
        
    </div>
    <div style="background-color: white; width: 49%; height: 49%; box-shadow: rgb(38, 57, 77) 0px 5px 10px -0px; display: flex; align-items: center; justify-content: center ">
        @*<div style="display: flex; align-items: center; justify-content: center">*@
            <MudButton Variant="Variant.Outlined" Color="Color.Info" Style="width: 40%; margin: 5px; align-self: center;" Href="/taskAdding">Выдать задание</MudButton>
        @*</div>*@
    </div>
    <div style="width: 49%; height: 49%; box-shadow: rgb(38, 57, 77) 0px 5px 10px -0px;">
        <img src='/css//Mesh-20.png' style="width: 100%; height:100%; object-fit: cover; overflow: hidden">
    </div>
</div>

@code {
    private IEnumerable<Analyze> ListOfAnalyzes = new List<Analyze>();
    private int analyzes;
    private IEnumerable<Analyze> ListOfRequests = new List<Analyze>();
    private int requests;
    private IEnumerable<User> ListOfUsers = new List<User>();
    private int users;

    DateTime? date = null;
    string dateFormat = "dd.MM.yyyy";

    public List<int> dataList = new List<int>();
    public List<string> labelsList = new List<string>();
    public string[] labels = new string[] { };
    public double[] data = new double[] { };

    protected override void OnInitialized()
    {
        ListOfAnalyzes = DBConnection.ImportOnlyAnalyzes();
        analyzes = ListOfAnalyzes.Count();
        ListOfRequests = DBConnection.ImportOnlyApplications();
        requests = ListOfRequests.Count();
        ListOfUsers = DBConnection.ImportAllLabWorkers();
        users = ListOfUsers.Count();

        UpdateChart();
    }

    private void UpdateChart()
    {
        dataList.Clear();
        labelsList.Clear();

        labelsList.Add("Заявки");

        dataList.Add(requests);

        labelsList.Add("Анализы");

        dataList.Add(analyzes);

        //foreach (var cl in ListOfUsers)
        //{
        //    List<User> lessons = ;

        //    if (lessons != null && date != null)
        //    {
        //        foreach (var todayLesson in lessons)
        //        {
        //            var lessonDate = Convert.ToDateTime(todayLesson.TimeStart).Day;

        //            if (Convert.ToDateTime(date).Day == lessonDate)
        //            {
        //                int attend = EducationClubContext.Attendences.Where(x => x.LessonId == todayLesson.Id).Count();

        //                labelsList.Add(todayLesson.Title);
        //                dataList.Add(attend);
        //            }
        //        }
        //    }
        //}

        data = dataList.ToArray().Select(Convert.ToDouble).ToArray();
        labels = labelsList.ToArray();
    }
}

<style>
    .mainblock {
        display: flex;
        box-shadow: rgb(38, 57, 77) 0px 20px 30px -10px;
        position: absolute;
        left: 15%;
        gap: 2%;
        top: 700%;
        width: 70%;
        height: 3100%;
        opacity: 1;
        mix-blend-mode: normal;
        background-color: rgba(255, 255, 255, 1);
        flex-direction: row;
        flex-wrap: wrap;
        justify-content: center;
    }
</style>