@page "/requestList"
@inject NavigationManager navigation;
@using Data;

<MudAppBar Style="margin-top: 2%; position: absolute; width: 90%; left: 50%; transform: translate(-50%, 0); background-color: white; box-shadow: rgb(38, 57, 77) 0px 20px 30px -10px;">
    <div Class="d-flex mx-auto">
        <MudButton Href="/worker">
            Главная страница
        </MudButton>
        <MudButton Href="/requestList">
            Заявки
        </MudButton>
        <MudButton Href="/myAnalyzeList">
            Выполненные анализы
        </MudButton>
        <MudButton Href="/workerEquipList">
            Оборудование
        </MudButton>
    </div>
    <MudIconButton Icon="@Icons.Material.Outlined.ExitToApp" aria-label="exit" Href="/"></MudIconButton>
</MudAppBar>

<div class="mainblock">
    <div style="flex: 50%; overflow: scroll;">
        <MudTable Items="@analyzes" Filter="new Func<Analyze,bool>(FilterFunc1)" @bind-SelectedItem="selectedItem1">
            <ToolBarContent>
                <MudText Typo="Typo.h6">Заявки</MudText>
                <MudSpacer />
                <MudTextField @bind-Value="searchString1" Placeholder="Search" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
                <MudSpacer />
            </ToolBarContent>
            <HeaderContent>
                <MudTh>Номер</MudTh>
                <MudTh>Тип</MudTh>
                <MudTh>Месторождение</MudTh>
                <MudTh>Провести</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="Номер">@context.Title</MudTd>
                <MudTd DataLabel="Тип">@context.Type</MudTd>
                <MudTd DataLabel="Месорождение">@context.Deposit</MudTd>
                <MudTd DataLabel="Провести"><MudButton OnClick="() => NavigationToAnalyze(context.Title)">Провести</MudButton></MudTd>
            </RowTemplate>
        </MudTable>
    </div>
    <div style="flex: 49%;">
        <img src='/css//Mesh-20.png' style="width: 100%; height:100%; object-fit: cover; overflow: hidden; box-shadow: rgb(38, 57, 77) 0px 20px 30px -10px;">
    </div>
</div>

@code {
    List<Analyze> analyzes;
    private string searchString1 = "";
    private Analyze selectedItem1 = null;
    private HashSet<Analyze> selectedItems = new HashSet<Analyze>();

    protected override void OnInitialized()
    {
        analyzes = DBConnection.ImportOnlyApplications();
    }

    private bool FilterFunc1(Analyze element) => FilterFunc(element, searchString1);

    private bool FilterFunc(Analyze element, string searchString)
    {
        if (string.IsNullOrWhiteSpace(searchString))
            return true;
        if (element.Title.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (element.Type.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if ($"{element.Deposit}".Contains(searchString))
            return true;
        return false;
    }

    public void NavigationToAnalyze(string id)
    {
        navigation.NavigateTo($"/analyzeOrReq/{id}");
    }
}


<style>
    .mainblock {
        display: flex;
        box-shadow: rgb(38, 57, 77) 0px 20px 30px -10px;
        position: absolute;
        left: 15%;
        top: 700%;
        width: 70%;
        height: 3100%;
        flex-direction: row;
        justify-content: center;
        align-self: center;
    }
</style>