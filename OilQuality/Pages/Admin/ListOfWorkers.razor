@page "/workerslist"
@using Data;
@inject NavigationManager navigation;

<MudAppBar Style="margin-top: 2%; position: absolute; width: 90%; left: 50%; transform: translate(-50%, 0); background-color: white; box-shadow: rgb(38, 57, 77) 0px 20px 30px -10px; align-items: center;">
    <MudButton Href="/admin">
        Главная страница
    </MudButton>
    <MudButton Href="/workerslist">
        Сотрудники
    </MudButton>
</MudAppBar>

<div class="mainblock">
    <div style="flex: 50%; ">
        <MudTable Items="@workers" Filter="new Func<User,bool>(FilterFunc1)" @bind-SelectedItem="selectedItem1">
            <ToolBarContent>
                <MudText Typo="Typo.h6">Сотрудники</MudText>
                <MudSpacer />
                <MudTextField @bind-Value="searchString1" Placeholder="Search" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
                <MudSpacer />
                <MudButton Variant="Variant.Outlined" Href="/workeradd">Добавить</MudButton>
            </ToolBarContent>
            <HeaderContent>
                <MudTh>Фамилия</MudTh>
                <MudTh>Имя</MudTh>
                <MudTh>Отчество</MudTh>
                <MudTh>Редактировать</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="Фамилия">@context.Surname</MudTd>
                <MudTd DataLabel="Имя">@context.Name</MudTd>
                <MudTd DataLabel="Отчество">@context.Patronymic</MudTd>
                <MudTd DataLabel="Редактировать"><MudButton Variant="Variant.Outlined" Color="Color.Info" OnClick="() => NavigationToEditingWorker(context.Login)">Редактировать</MudButton></MudTd>
            </RowTemplate>
@*            <PagerContent>
                <MudTablePager />
            </PagerContent>*@
        </MudTable>
    </div>
    <div style="flex: 49%;">
        <img src='/css//Mesh-20.png' style="width: 100%; height:100%; object-fit: cover; overflow: hidden; box-shadow: rgb(38, 57, 77) 0px 20px 30px -10px;">
    </div>
</div>

@code {
    List<User> workers;
    private string searchString1 = "";
    private User selectedItem1 = null;
    private HashSet<User> selectedItems = new HashSet<User>();

    protected override void OnInitialized()
    {
        workers = DBConnection.ImportAllWorkersWithoutAdmin();
    }

    private bool FilterFunc1(User element) => FilterFunc(element, searchString1);

    private bool FilterFunc(User element, string searchString)
    {
        if (string.IsNullOrWhiteSpace(searchString))
            return true;
        if (element.Surname.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (element.Name.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if ($"{element.Patronymic}".Contains(searchString))
            return true;
        return false;
    }

    public void NavigationToEditingWorker(string worker)
    {
        navigation.NavigateTo($"/workeredit/{worker}");
    }
}

<style>
    .mainblock {
        display: flex;
        box-shadow: rgb(38, 57, 77) 0px 20px 30px -10px;
        position: absolute;
        left: 15%;
        top: 700%;
        width: 70%;
        height: 3100%;
        flex-direction: row;
        justify-content: center;
        align-self: center;
    }
</style>