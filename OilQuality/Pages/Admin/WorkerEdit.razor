@page "/workeradd"
@page "/workeredit/{workerLogin}"
@using OilQuality.Data;
@inject ISnackbar Snackbar
@inject NavigationManager navigation;

<MudAppBar Style="margin-top: 2%; position: absolute; width: 90%; left: 50%; transform: translate(-50%, 0); background-color: white; box-shadow: rgb(38, 57, 77) 0px 20px 30px -10px; ">
    <div Class="d-flex mx-auto">
        <MudButton Href="/admin">
            Главная страница
        </MudButton>
        <MudButton Href="/workerslist">
            Сотрудники
        </MudButton>
    </div>
    <MudIconButton Icon="@Icons.Material.Outlined.ExitToApp" aria-label="exit" Href="/"></MudIconButton>
</MudAppBar>

<div class="mainblock">
    <div style="width: 50%; ">
        <img src='/css//Mesh-20.png' style="width: 100%; height:100%; object-fit: cover; overflow: hidden; box-shadow: rgb(38, 57, 77) 0px 20px 30px -10px;">
    </div>
    <div style="width: 50%;  padding: 25px; ">
        <MudText Style="font-size: 16px">
            Фамилия:
        </MudText>
        <MudTextField T="String" Variant="Variant.Text" Style="font-size: 16px; margin: 0; margin-bottom: 10px" @bind-Value="@surname"/>
        <MudText Style="font-size: 16px">
            Имя:
        </MudText>
        <MudTextField T="String" Variant="Variant.Text" Style="font-size: 16px; margin: 0; margin-bottom: 10px" @bind-Value="@name" />
        <MudText Style="font-size: 16px">
            Отчество:
        </MudText>
        <MudTextField T="String" Variant="Variant.Text" Style=" font-size: 16px; margin: 0; margin-bottom: 10px" @bind-Value="@patronymic" />
        <MudText Style="font-size: 16px">
            Логин:
        </MudText>
        <MudTextField T="String" Variant="Variant.Text" Style="font-size: 16px; margin: 0; margin-bottom: 10px" @bind-Value="@login" />
        <MudText Style="font-size: 16px">
            Пароль:
        </MudText>
        <MudTextField T="String" Variant="Variant.Text" Style="font-size: 16px; margin: 0; margin-bottom: 10px" @bind-Value="@password" />
        <MudText Style="font-size: 16px; margin: 0">
            Роль:
        </MudText>
        <MudSelect T="String" @bind-Value="@role" Style="font-size: 16px; margin: 0">
            <MudSelectItem Value="@("Администратор")" />
            <MudSelectItem Value="@("Лаборант")" />
            <MudSelectItem Value="@("Заведующий")" />
        </MudSelect>
        <br />
        @if (!newOne)
        {
            <div Class="d-flex mx-auto" style="display: inline-block;">
                <MudButton Variant="Variant.Outlined" Color="Color.Info" Class="d-flex mx-auto" Style="margin: 15px" @onclick="RegistrationLabWorker">
                    Сохранить
                </MudButton>
                <MudButton Variant="Variant.Outlined" Color="Color.Info" Class="d-flex mx-auto" Style="margin: 15px" @onclick="DeletingWorker">
                    Удалить
                </MudButton>
            </div>
        }
        else
        {
            <MudButton Variant="Variant.Outlined" Color="Color.Info" Class="d-flex mx-auto" Style="margin: 15px" @onclick="RegistrationLabWorker">
                Сохранить
            </MudButton>
        }
    </div>

</div>

@code {
    string? surname;
    string? name;
    string? patronymic;
    string? login;
    string? password; 
    string? role;
    bool newOne;

    User user;

    [Parameter]
    public string? workerLogin { get; set; }


    protected override void OnInitialized()
    {
        newOne = true;

        if (workerLogin != null)
        {
            user = DBConnection.FindUserByLogin(workerLogin);

            surname = user.Surname;
            name = user.Name;
            patronymic = user.Patronymic;
            login = user.Login;
            password = user.Password;
            role = user.RoleName;

            newOne = false;
        }
    }

    public void DeletingWorker()
    {
        DBConnection.DeleteUserFromDataBase(user);
        navigation.NavigateTo("/workerslist");
        Snackbar.Add("Успешно удалено", Severity.Success);
    }

    public void RegistrationLabWorker()
    {
        if (workerLogin != null)
        {if (surname != null && name != null && password != null)
            {
                user.Surname = surname;
                user.Name = name;
                user.Patronymic = patronymic;
                user.Login = login;
                user.Password = password;
                user.RoleName = role;
                DBConnection.ReplaceUser(user);

                Snackbar.Add("Изменения сохранены", Severity.Success);

                navigation.NavigateTo("/admin");
            }
            else
            {
                Snackbar.Add("Не все поля заполнены корректно.", Severity.Error);
            }
        }
        else
        {
            if (surname != null && name != null && login != null &&
            password != null && role != null && role != "-")
            {
                if (DBConnection.FindUserByLogin(login) == null)
                {
                    User userData = new User()
                        {
                            Surname = surname,
                            Name = name,
                            Patronymic = patronymic,
                            Login = login,
                            Password = password,
                            RoleName = role
                        };
                    DBConnection.AddToDataBase(userData);

                    Snackbar.Add("Успешно", Severity.Success);
                    navigation.NavigateTo("/admin");

                }
                else
                {
                    Snackbar.Add("Пользователь с такими данными уже существует.", Severity.Error);
                }
            }
            else
            {
                Snackbar.Add("Не все необходимые поля заполнены.", Severity.Error);
            }
        }
    }
}

<style>

    .buttonThree {
        box-shadow: rgba(0, 0, 0, 0.25) 0 8px 15px;
        transform: translateY(-2px);
        margin: 3%;
        position: absolute;
        bottom: 0;
        right: 0;
        width: 10%;
        background-color: white;
        box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.5);
        opacity: 1;
        mix-blend-mode: normal;
        padding-left: 10px;
        padding-right: 10px;
        padding-top: 10px;
        align-items: inherit;
        align-items: flex-start;
        justify-content: flex-start;
        border-radius: 20px
    }

    .pStyle {
        letter-spacing: 0;
        text-transform: none;
        text-align: center;
        vertical-align: middle;
        font-family: Playfair Display;
        font-size: 20px;
        color: rgba(0, 0, 0, 1);
        font-weight: 400;
        width: 100%
    }

    .mainblock {
        display: flex;
        box-shadow: rgb(38, 57, 77) 0px 20px 30px -10px;
        position: absolute;
        left: 15%;
        top: 700%;
        width: 70%;
        height: 3100%;
        flex-direction: row;
        justify-content: center;
        align-self: center;
        background-color: white;
        /*        background-image: url('/css//Mesh-51.png');*/
    }
</style>